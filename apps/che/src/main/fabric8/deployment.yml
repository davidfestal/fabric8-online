spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    spec:
      containers:
      - env:
        - name: "CHE_DOCKER_IP_EXTERNAL"
          valueFrom:
            configMapKeyRef:
              key: "hostname-http"
              name: "che"
        - name: "CHE_WORKSPACE_STORAGE"
          valueFrom:
            configMapKeyRef:
              key: "workspace-storage"
              name: "che"
        - name: "CHE_WORKSPACE_STORAGE_CREATE_FOLDERS"
          valueFrom:
            configMapKeyRef:
              key: "workspace-storage-create-folders"
              name: "che"
        - name: "CHE_LOCAL_CONF_DIR"
          valueFrom:
            configMapKeyRef:
              key: "local-conf-dir"
              name: "che"
        - name: "CHE_OPENSHIFT_PROJECT"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "CHE_OPENSHIFT_SERVICEACCOUNTNAME"
          valueFrom:
            configMapKeyRef:
              key: "openshift-serviceaccountname"
              name: "che"
        - name: "CHE_DOCKER_SERVER__EVALUATION__STRATEGY"
          valueFrom:
            configMapKeyRef:
              key: "che-server-evaluation-strategy"
              name: "che"
        - name: "CHE_DOCKER_SERVER__EVALUATION__STRATEGY_CUSTOM_TEMPLATE"
          valueFrom:
            configMapKeyRef:
              key: "che.docker.server_evaluation_strategy.custom.template"
              name: "che"
        - name: "CHE_DOCKER_SERVER__EVALUATION__STRATEGY_CUSTOM_EXTERNAL_PROTOCOL"
          valueFrom:
            configMapKeyRef:
              key: "che.docker.server_evaluation_strategy.custom.external.protocol"
              name: "che"
        - name: "CHE_LOG_LEVEL"
          valueFrom:
            configMapKeyRef:
              key: "log-level"
              name: "che"
        - name: "CHE_PORT"
          valueFrom:
            configMapKeyRef:
              key: "port"
              name: "che"
        - name: "CHE_DOCKER_CONNECTOR"
          valueFrom:
            configMapKeyRef:
              key: "docker-connector"
              name: "che"
        - name: "CHE_DEBUG_SERVER"
          valueFrom:
            configMapKeyRef:
              key: "remote-debugging-enabled"
              name: "che"
        - name: "CHE_OAUTH_GITHUB_FORCEACTIVATION"
          valueFrom:
            configMapKeyRef:
              key: "che-oauth-github-forceactivation"
              name: "che"
        - name: "CHE_OPENSHIFT_WORKSPACE_MEMORY_OVERRIDE"
          valueFrom:
            configMapKeyRef:
              key: "workspaces-memory-limit"
              name: "che"
        - name: "CHE_OPENSHIFT_WORKSPACE_MEMORY_REQUEST"
          valueFrom:
            configMapKeyRef:
              key: "workspaces-memory-request"
              name: "che"
        - name: "CHE_WORKSPACE_AUTO_START"
          valueFrom:
            configMapKeyRef:
              key: "enable-workspaces-autostart"
              name: "che"
        - name: "JAVA_OPTS"
          valueFrom:
            configMapKeyRef:
              key: "che-server-java-opts"
              name: "che"
        - name: "CHE_WORKSPACE_JAVA_OPTIONS"
          valueFrom:
            configMapKeyRef:
              key: "che-workspaces-java-opts"
              name: "che"
        - name: "CHE_OPENSHIFT_SECURE_ROUTES"
          valueFrom:
            configMapKeyRef:
              key: "che-openshift-secure-routes"
              name: "che"
        - name: "CHE_OPENSHIFT_SERVER_INACTIVE_STOP_TIMEOUT_MS"
          valueFrom:
            configMapKeyRef:
              key: "che-server-timeout-ms"
              name: "che"
        - name: "CHE_OPENSHIFT_PRECREATE_WORKSPACE_DIRS"
          valueFrom:
            configMapKeyRef:
              key: "che-openshift-precreate-subpaths"
              name: "che"
        - name: "CHE_KEYCLOAK_OSO_ENDPOINT"
          valueFrom:
            configMapKeyRef:
              key: "keycloak-oso-endpoint"
              name: "che"
        - name: "CHE_KEYCLOAK_GITHUB_ENDPOINT"
          valueFrom:
            configMapKeyRef:
              key: "keycloak-github-endpoint"
              name: "che"
        image: "rhche/che-server:${che-server.version}"
        imagePullPolicy: "IfNotPresent"
        name: che
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 20
          timeoutSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 10
        resources:
          limits:
            memory: 700Mi
          requests:
            memory: 256Mi
        ports:
        - containerPort: 8080
          name: "http"
        - containerPort: 8000
          name: "http-debug"
        volumeMounts:
        - mountPath: "/data"
          name: "che-data-volume"
      serviceAccountName: "che"
      volumes:
      - name: che-data-volume
        persistentVolumeClaim:
          claimName: che-data-volume
